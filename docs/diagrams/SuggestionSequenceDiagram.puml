@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SuggestionEngine" as SuggestionEngine LOGIC_COLOR
participant ":OpenSuggestionArgHandler" as OpenSuggestionArgHandler LOGIC_COLOR
participant "o:OpenSuggestionGenerator" as OpenSuggestionGenerator LOGIC_COLOR
participant ":SuggestionItemImpl" as SuggestionItemImpl LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager
activate LogicManager

create SuggestionEngine
LogicManager -> SuggestionEngine
activate SuggestionEngine

SuggestionEngine -> SuggestionEngine : autoUpdateInput("open /")
activate SuggestionEngine

SuggestionEngine -> Model : clearSuggestions()
activate Model

Model --> SuggestionEngine
deactivate Model

SuggestionEngine -> Model : clearResponseText()
activate Model

Model --> SuggestionEngine
deactivate Model

SuggestionEngine -> SuggestionEngine : suggest("open /")
activate SuggestionEngine

SuggestionEngine -> SuggestionEngine : parseCommand("open /");
activate SuggestionEngine

create OpenSuggestionArgHandler
SuggestionEngine -> OpenSuggestionArgHandler
activate OpenSuggestionArgHandler

OpenSuggestionArgHandler --> SuggestionEngine
deactivate OpenSuggestionArgHandler

SuggestionEngine -> OpenSuggestionArgHandler : handleArg("open /")
activate OpenSuggestionArgHandler

OpenSuggestionArgHandler -> Model : setResponseText("Open a note")
activate Model

Model --> OpenSuggestionArgHandler
deactivate Model

create OpenSuggestionGenerator
OpenSuggestionArgHandler -> OpenSuggestionGenerator
activate OpenSuggestionGenerator

OpenSuggestionGenerator --> OpenSuggestionArgHandler : o
deactivate OpenSuggestionGenerator

OpenSuggestionArgHandler --> SuggestionEngine : o
deactivate OpenSuggestionArgHandler
'Hidden arrow to position the destroy marker below the end of the activation bar.
OpenSuggestionArgHandler -[hidden]-> SuggestionEngine
destroy OpenSuggestionArgHandler

SuggestionEngine --> SuggestionEngine
deactivate SuggestionEngine

SuggestionEngine -> OpenSuggestionGenerator : execute(model)
activate OpenSuggestionGenerator

OpenSuggestionGenerator -> OpenSuggestionGenerator : getPossiblePaths\n(paths, model)
activate OpenSuggestionGenerator

OpenSuggestionGenerator --> OpenSuggestionGenerator
deactivate OpenSuggestionGenerator

OpenSuggestionGenerator -> OpenSuggestionGenerator : getSuggestions\n(possiblePaths, model)
activate OpenSuggestionGenerator

create SuggestionItemImpl
OpenSuggestionGenerator -> SuggestionItemImpl
activate SuggestionItemImpl

SuggestionItemImpl --> OpenSuggestionGenerator : item
deactivate SuggestionItemImpl

OpenSuggestionGenerator --> OpenSuggestionGenerator
deactivate OpenSuggestionGenerator

OpenSuggestionGenerator -> Model : setSuggestions(item)
activate Model

Model --> OpenSuggestionGenerator
deactivate Model

OpenSuggestionGenerator --> SuggestionEngine
deactivate OpenSuggestionGenerator

SuggestionEngine --> SuggestionEngine
deactivate SuggestionEngine

SuggestionEngine --> SuggestionEngine
deactivate SuggestionEngine

SuggestionEngine --> LogicManager
deactivate SuggestionEngine

[<--LogicManager
deactivate LogicManager
@enduml
